
## Persist data to a persistent volume
##
persistence:
  enabled: true
  ## chronograf data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  # storageClass: "-"
  ## If keepPvc is true, pvc will not be deleted after running helm uninstall
  keepPvc: true
  accessMode: ReadWriteOnce
  size: 8Gi


## Configure the ingress object to hook into existing infastructure
## ref : http://kubernetes.io/docs/user-guide/ingress/
## OPTIONALLY you can set .Values.ingress.secretName to set which secret to use
##
ingress:
  enabled: true
  tls: true
  hostname: chronograf.apps.mars.michael-washer.com
  className: openshift-default
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # secretName: my-tls-cert
    # kubernetes.io/tls-acme: "true"
  path: /

## Extra environment variables that will be passed onto deployment pods
env:
  HOST_PAGE_DISABLED: true

## The name of a secret in the same kubernetes namespace which contain values to be added to the environment
## This can be useful for auth tokens, etc
envFromSecret: ""

# volumes:
# - name: chronograf-output-influxdb2
#   configMap:
#     name: "chronograf-output-influxdb2"
# mountPoints:
# - name: chronograf-output-influxdb2
#   mountPath: /var/lib/chronograf/conf.d
#   subPath: influxdb2.conf

## Use Recreate when persistence is enabled
updateStrategy:
  type: RollingUpdate

influxdb: {}
  ## Name of an existing Secrect used to set the environment variables for the
  ## InfluxDB user and password. The expected keys in the secret are
  ## `influxdb-user` and `influxdb-password`.
  ##
  # existingSecret: influxdb-auth